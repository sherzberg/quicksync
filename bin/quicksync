#!/usr/bin/env python

import os, sys
import subprocess
import platform

from quicksync.argparser import QuickSyncArgumentParser
from quicksync.configparser import QuickSyncConfigParser

FOLDER_SEP = ';'
RSYNC_OPTIONS = '-v -r -a --exclude=.svn --exclude=*.qs'
RSYNC_CMD = 'rsync %(OPTIONS)s %(FROM)s %(TO)s'

IS_WINDOWS = platform.uname()[0]=='Windows'

def get_folders(filename):
    folders = []
    fh = open(filename,'r')
    for line in fh.readlines():
        l = line.split(FOLDER_SEP)
        folders.append((fix_folder(l[0].strip()), fix_folder(l[1].strip())))
    return folders

def do_sync(folders):
    for tup in folders:
        f, t = tup[0], tup[1]
        print 'Syncing %s to %s' %(f, t)
        cmd = build_command(f, t)
        #print cmd
        subprocess.call(cmd, shell=True)
        print '-----------------------------------------'

def build_command(f, t):
#    if SIMULATE: RSYNC_OPTIONS = '-n '+RSYNC_OPTIONS
#    print RSYNC_OPTIONS
    return RSYNC_CMD %{'FROM':f, 'TO':t, 'OPTIONS': RSYNC_OPTIONS}

if __name__ == '__main__':
    argparser = QuickSyncArgumentParser()
    args = argparser.parse_args()

    configparser = QuickSyncConfigParser()
    configparser.read(args.configfile)

    do_sync(configparser.get_folders())
 
