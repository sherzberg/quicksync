#!/usr/bin/env python

import os, sys
import subprocess
import platform
import argparse

RSYNC_OPTIONS = '-v -r -a --exclude=.svn --exclude=*.qs'
RSYNC_CMD = 'rsync %(OPTIONS)s %(FROM)s %(TO)s'

IS_WINDOWS = platform.uname()[0]=='Windows'

def fix_folder(folder):
    folder = os.path.normpath(folder)+'/'
    if IS_WINDOWS:
       split = folder.split(':')
       folder = '/cygdrive/%s%s' % (split[0], split[1])
    return folder

def get_folders(filename):
    folders = []
    fh = open(filename,'r')
    for line in fh.readlines():
        l = line.split()
        folders.append((fix_folder(l[0]), fix_folder(l[1])))
    return folders

def do_sync(folders):
    for tup in folders:
        f, t = tup[0], tup[1]
        cmd = build_command(f, t)
        print cmd
        subprocess.call(cmd, shell=True)

def build_command(f, t):
#    if SIMULATE: RSYNC_OPTIONS = '-n '+RSYNC_OPTIONS
#    print RSYNC_OPTIONS
    return RSYNC_CMD %{'FROM':f, 'TO':t, 'OPTIONS': RSYNC_OPTIONS}

if __name__ == '__main__':

    parser = argparse.ArgumentParser(description='This program will sync two folders.')
    parser.add_argument('inputfile', help='input file to read the sync information from')
    parser.add_argument('--simulate', action='store_true', help='Simulates the sync, does not actually do anything')
    args = parser.parse_args()
    SIMULATE = args.simulate

    do_sync(get_folders(args.inputfile))
 
